/* tslint:disable */
/* eslint-disable */
/**
 * PlainAPI
 * Create APIs with plain English
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Endpoint,
    EndpointFromJSON,
    EndpointFromJSONTyped,
    EndpointToJSON,
} from './';

/**
 * 
 * @export
 * @interface API
 */
export interface API {
    /**
     * 
     * @type {number}
     * @memberof API
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof API
     */
    title: string;
    /**
     * 
     * @type {Array<Endpoint>}
     * @memberof API
     */
    endpoints: Array<Endpoint>;
    /**
     * 
     * @type {number}
     * @memberof API
     */
    userId: number;
    /**
     * 
     * @type {Date}
     * @memberof API
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof API
     */
    updated: Date;
}

export function APIFromJSON(json: any): API {
    return APIFromJSONTyped(json, false);
}

export function APIFromJSONTyped(json: any, ignoreDiscriminator: boolean): API {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'endpoints': ((json['endpoints'] as Array<any>).map(EndpointFromJSON)),
        'userId': json['user_id'],
        'created': (new Date(json['created'])),
        'updated': (new Date(json['updated'])),
    };
}

export function APIToJSON(value?: API | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'endpoints': ((value.endpoints as Array<any>).map(EndpointToJSON)),
        'user_id': value.userId,
        'created': (value.created.toISOString()),
        'updated': (value.updated.toISOString()),
    };
}


